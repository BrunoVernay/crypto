#Eclipse messages class for SigVerComposite
SigVerComposite_description=Die Visualisierung zeigt, wie man die digitale Signatur f\u00fcr ein bestimmtes Dokument verifizieren kann. Eine digitale Signatur wird zur Authentizit\u00e4ts- und Integrit\u00e4tspr\u00fcfung verwendet. Auﬂerdem stellt sie die Integrit\u00e4t des Dokumentes sicher.
SigVerComposite_lblHeader=Signatur-Verifikation
SigVerComposite_lblTitle=Signatur-Verifikation
SigVerComposite_lblProgress=Schritt %s von 4
SigVerComposite_lblPubKey=\u00d6ffentlicher Schl\u00fcssel
#The TabFolder
SigVerComposite_tbtmNewItem_0=Schritt 1
SigVerComposite_tbtmNewItem_1=Schritt 2
SigVerComposite_tbtmNewItem_2=Schritt 3
SigVerComposite_tbtmNewItem_3=Schritt 4
SigVerComposite_txtDescriptionOfStep1=\r\nInput ausw\u00e4hlen\r\n\r\nSie k\u00F6nnen ausw\u00e4hlen, welches Dokument Sie verifizieren m\u00F6chten. Um die Signatur-Verifikation zu starten, klicken Sie bitte auf den Button \"Input ausw\u00e4hlen\". Folgen Sie danach den Anweisungen.
SigVerComposite_txtDescriptionOfStep2=\r\nHashfunktion ausw\u00e4hlen\r\n\r\nEine Hashfunktion ist ein Algorithmus, die einen Datensatz variabler L\u00e4nge auf einen Datensatz fixer L\u00e4nge abbildet. Da die Gr\u00F6ﬂe des Hashwertes einer Datei normalerweise viel kleiner ist als die Datei selbst, wird direkt der Hashwert signiert. F\u00fcr die \u00dcberpr\u00fcfung der Signatur wird erneut ein Hashwert berechnet, welcher dann dem berechneten Hash des Dokumentes verglichen wird.\r\nBitte w\u00e4hlen Sie den gleichen Algorithmus wie bei der Signaturerstellung.
SigVerComposite_txtDescriptionOfStep3=\r\nSignatur verifizieren\r\n\r\nEntschschl\u00fcsseln Sie Ihr signiertes Dokument. Der Entschl\u00fcsselungsprozess ist von dem verwendeten Signieralgorithmus abh\u00e4ngig. Die Signatur wurde mit dem privaten Schl\u00fcssel erstellt. Zum entschl\u00fcsseln wird nun der \u00F6ffentliche Schl\u00fcssel des Signaturerstellers verwendet. 
SigVerComposite_txtDescriptionOfStep4=\r\nSignatur pr\u00fcfen\r\n\r\nMit Hilfe der Signatur k\u00F6nnen Sie nun die Authentizit\u00e4t des Senders \u00fcberpr\u00fcfen und sichergehen, dass die Nachricht von diesem stammt und nicht ver\u00e4ndert wurde. Wenn die \u00fcberpr\u00fcfung erfolgreich war, sehen Sie ein gr\u00fcnes H\u00e4ckchen. Wenn nicht ein rotes X. F\u00fcr alle weiteren relevaten Informationen klicken Sie bitte auf \"Ergebnis anzeigen\". \r\n
SigVerComposite_txtDescriptionOfStep4_Success=\r\nSignatur wurde erfolgreich signiert!\r\n
#Buttons
SigVerComposite_btnHash=Hashfunktion ausw\u00e4hlen
SigVerComposite_btnSignature=Signatur verifizieren
SigVerComposite_btnAddInput=Input ausw\u00e4hlen
SigVerComposite_btnDecrypt=Signatur verifizieren
SigVerComposite_btnResult=Ergebnis anzeigen
SigVerComposite_btnReset=Schritt zur\u00fcck
SigVerComposite_btnReturn=Return to JCT-PKI
SigVerComposite_menu=Alle ausw\u00e4hlen
SigVerComposite_MessageTextReturn=Click on "Return to JCT-PKI" to return and continue there
SigVerComposite_MessageTitleReturn=Information
#Result true/false description
SigVerComposite_resutFalseDescription=Verifizierung Fehlgeschlagen
SigVerComposite_resutTrueDescription=Verifizierung Erfolgreich

#Model
ModelComposite_description=Die Visulalisierung zeigt, wie sich die Verwendung verschiedener G\u00fcltigkeitsmodelle (Schalen- und Kettenmodell) auf die G\u00fcltigkeit von Zertifikaten auswirkt. 
ModelComposite_lblHeader=Visualisierung von G\u00fcltigkeitsmodellen
ModelComposite_lblTitle=Visualisierung von G\u00fcltigkeitsmodellen
ModelComposite_btnShellM=Schalenmodell
ModelComposite_btnChainM=Kettenmodell
ModelComposite_lblroot=Wurzel-Zertifikat
ModelComposite_lbllevel2=Level 2-Zertifikat
ModelComposite_lbllevel3=Teilnehmer-Zertifikat
ModelComposite_btnNewResult=Ergebnis neu berechnen
ModelComposite_Choose=Bitte geben Sie unten das gew\u00fcnschte G\u00fcltigkeitsdatum an.