#Eclipse modern messages class
#Tue Dec 10 11:50:12 CET 2013
CertificateShowExit=Close
CertificateShow_btnISee_text=I see
CertificateShow_grpCertificate_text=Certificate
ClientCertificateCompositeBtnInfo=Information
ClientCertificateCompositeBtnNextStep=Next Step
ClientCertificateCompositeBtnShow=Show
ClientCertificateCompositeGrpClientCertificate=Client Certificate
ClientCertificateCompositeLblCertifcate=Client Certificate Request
ClientCertificateCompositeLblCertificateVerify=Certificate Verify
ClientCertificateCompositeLblClientKeyExchange=Client Key Exchange
ClientCertificateInformationText=Client Certificate:\n\nIn diesem Schritt wird, sofern angefordert, das Zertifikat des Client erzeugt sowie Schlüsselinformationen ausgetauscht.\n\nSofern im Schritt zuvor (Server Certificate) das Feld Server Certificate Request mit \u201EJa\u201C markiert wurde, kann man sich über den \u201EAnzeigen\u201C-Button das Zertifikat des Client anzeigen lassen.\n\nDer Parameter Client_Key_Exchange verdeutlicht, dass Schlüsselmaterial ausgetauscht wird.\n\nIm Certificate_Verify versucht der Client das Zertifikat des Servers zu verifizieren. Wenn dies nicht möglich ist, wird die Verbindung abgebrochen.
ClientChangeCipherSpecCompositeBtnInformation=Information
ClientChangeCipherSpecCompositeBtnNextStep=Next Step
ClientChangeCipherSpecCompositeLblClientChangeCipher=Client Change Cipher Spec
ClientChangeCipherSpecCompositeLblClientChangeCipherSpec=Change Cipher Spec
ClientChangeCipherSpecCompositeLblFinished=Finished
ClientChangeCipherSpecInformationText=Client Change Cipher Spec:\n\nVia Change_Cipher_Spec signalisiert der Server, dass er ab jetzt die neuen, zuvor festgelegten Schlüssel verwendet.

ClientFinishedCompositeBtnInformation=Information
ClientFinishedCompositeGrpServerFinished=Client Finished
ClientFinishedCompositeLblFinished=Finished
ClientFinishedInformationText=Client Finished:\n\nClient_Finished ist eine Nachricht, bestehend aus einem Hashwert über alle vorhergehenden Nachrichten und erzeugten Schlüssel. Dies dient zum Vergleichen der berechneten Schlüssel.\n\nDiese Nachricht ist die erste Nachricht die mit den zuvor festgelegten Parametern verschlüsselt wird.

ClientHelloCompositeBtnGenerate=generate
ClientHelloCompositeBtnInformation=Information
ClientHelloCompositeBtnNextStep=Next Step
ClientHelloCompositeGrpClientHello=Client Hello
ClientHelloCompositeLblCipherSuit=Cipher Suite
ClientHelloCompositeLblRandom=Random
ClientHelloCompositeLblSessionId=Session ID
ClientHelloCompositeLblSessionIdValue=0
ClientHelloCompositeLblVersion=Version
ClientHelloComposite_group_text=Client Hello
ClientHelloInformationText=Client Hello:\n\nIn diesem Schritt geht es darum, dass der Client auf sich aufmerksam macht und die ersten Verbindungsparameter übermittelt.\n\nDabei wählt der Client die von ihm unterstützten SSL/TLS- Versionen sowie Cipher Suits aus, welche er für diese Kommunikation verwenden möchte. Hierbei sind auch Mehrfachauswahlen möglich. Des Weiteren wird mit diesen Parametern der Handshake durchgeführt. Falls der Server keine der vorgeschlagenen Optionen unterstützt, weist er das Query zurück und der Client muss erneut Vorschläge senden.\n\nDer Zufallswert besteht aus 4 Byte Zeitstempel + 28 Byte Zufallszahl. Dies dient dem Replayschutz.\n\nDie Session ID ist bei jedem Verbindungsaufbau \u201E0\u201C und signalisiert damit, dass eine neue Verbindung aufgebaut werden soll. Wäre der Wert ungleich \u201E0\u201C, so würden die Parameter einer bestehenden Verbindung verwendet und die Schritte 2 und 3 übersprungen werden, dies darzustellen war jedoch nicht unser Ziel.

ServerCertificateCompositeBtnInfo=Information
ServerCertificateCompositeBtnNextStep=Next Step
ServerCertificateCompositeBtnShow=Show
ServerCertificateCompositeLblCertificate=Servers Certificate
ServerCertificateCompositeLblCertificateRequest=Server Certificate Request
ServerCertificateCompositeLblServerHelloDone=Server Hello Done
ServerCertificateCompositeLblServerKeyExchange=Server Key Exchange
ServerCertificateCompositeRdbNo=No
ServerCertificateCompositeRdbYes=Yes
ServerCertificateCompositeServerCertificate=Server Certificate
ServerCertificateInformationText=Server Certificate:\n\nIn diesem Schritt dreht sich alles um den Austausch von Zertifikaten, sowie die Schlüsselberechnung durch die zuvor festgelegten Parameter.\n\nDurch den \u201EAnzeigen\u201C Button kann man sich das Zertifikat des Servers anzeigen lassen.\n\nDurch die Auswahlmöglichkeiten bei Server Certificate Request legt man fest, ob ein Zertifikat des Client angefordert wird. Ist dies nicht der Fall, ist es auch nicht möglich sich im nächsten Schritt das Zertifikat des Client anzeigen zu lassen.\n\nDer Parameter Server_Key_Exchange teilt dem Client mit, dass zusätzliche Schlüsselinformationen benötigt werden (bei Diffie-Hellman nötig).\n\nMit Server_Hello_Done wird der 2. Schritt beendet.

ServerChangeCipherSpecCompositeBtnInformation=Information
ServerChangeCipherSpecCompositeBtnNextStep=Next Step
ServerChangeCipherSpecCompositeLblFinished=Finished
ServerChangeCipherSpecCompositeLblServerChangeCipher=Server Change Cipher Spec
ServerChangeCipherSpecCompositeLblServerChangeCipherSpec=Change Cipher Spec
ServerChangeCipherSpecInformationText=Server Change Cipher Spec:\n\nVia Change_Cipher_Spec signalisiert der Server, dass er ab jetzt die neuen, zuvor festgelegten Schlüssel verwendet.
ServerFinishedCompositeBtnInformation=Information
ServerFinishedCompositeGrpServerFinished=Server Finished
ServerFinishedCompositeLblFinished=Finished
ServerFinishedInformationText=Server Finished:\n\nServer_Finished ist eine Nachricht, bestehend aus einem Hashwert über alle vorhergehenden Nachrichten und erzeugten Schlüssel. Dies dient zum Vergleichen der berechneten Schlüssel.\n\nDiese Nachricht ist die erste Nachricht die mit den zuvor festgelegten Parametern verschlüsselt wird.

ServerHelloCompositeBtnGenerate=generate
ServerHelloCompositeBtnInfo=Information
ServerHelloCompositeBtnNextStep=Next Step
ServerHelloCompositeError=Error
ServerHelloCompositeErrorRandom=Non-hex text in textfield Random
ServerHelloCompositeErrorRandomShort=Hex text in textfield Random must be 64 digits long
ServerHelloCompositeErrorSessionID=Non-numeric text in textfield Session ID
ServerHelloCompositeGrpServerHello=Server Hello
ServerHelloCompositeLblCipherSuite=Cipher Suite
ServerHelloCompositeLblRandom=Random
ServerHelloCompositeLblSessionID=Session ID
ServerHelloCompositeLblVersion=Version
ServerHelloInformationText=Server Hello:\n\nIn diesem Schritt wählt der Server eine SSL/TLS- Version sowie eine Cipher Suite aus. Sollte diese SSL/TLS-Version bzw. Cipher Suite vom Client nicht unterstützt werden, sendet der Server eine Nachricht an den Client, dass mit diesen Einstellungen kein Verbindungsaufbau möglich ist und der Client erneut eine Liste mit unterstützten SSL/TLS-Versionen und Cipher Suites senden muss.\n\nAuch der Server erzeugt sich einen eigenen Zufallswert. Dieser hat denselben Aufbau wie der des Clients, d.h. er besteht aus 4 Byte Zeitstempel + 28 Byte Zufallszahl.\n\nZuletzt wird die übermittelte Session ID noch auf einen Wert ungleich \u201E0\u201C gesetzt, um später die durchgeführten Handshakes den einzelnen Clients zuordnen zu können.
SslViewBtnNextStep=Next Step
SslViewBtnPreviousStep=Previous Step
SslViewBtnReset=Reset
SslViewLblClient=Client
SslViewLblServer=Server
SslViewLblInfo=Information
SslViewStxInformation=Information
stxInformationCipherSuitesExchanged=Selected Cipher Suites, VersionID, Session ID and Random Value were sent to the server.\n\n
stxInformationSelectedCiphers=Selected Cipher Suites\n\nTLS1.0:\n
stxInformationRandomValue=Random Value:\n
stxInformationTLS1=\nTLS 1.1:\n
stxInformationTLS2=\nTLS 1.2:\n
stxInformationCipherSuiteRefused1=Server sends a message to the client, that the server wants to use a cipher suite (
stxInformationCipherSuiteRefused2=), that is not supported by the client, according to the first message the client sent. To ensure that a connection is possible, the client has to support the cipher suite, the server wants to use.
AttacksCaution = Achtung!
AttacksProceed = \nTrotzdem fortsetzen?
AttacksSHA1=Sie haben eine unsichere Cipher Suite ausgewählt! \nDie Hashfunktion SHA1 ist nicht sicher - es existieren mehrere bekannte Angriffe auf diese Hashfunktion.
AttacksMD5=Sie haben eine unsichere Cipher Suite ausgewählt! \nMit MD5 erstellte Hashes können innerhalb kürzester Zeit gebrochen werden!
AttacksBEAST=Sie haben eine unsichere Cipher Suite ausgewählt! \nTLS1.0 in Kombination mit CBC ermöglicht einen Angriff mit der sogenannnten BEAST-Attacke.
AttacksRC4=Sie haben eine unsichere Cipher Suite ausgewählt! \nEs gibt eine Reihe von Angriffen auf RC4. Die im Moment aktuellste ist eine Attacke von  AlFardan, Bernstein, Paterson, Poettering und Schuldt.
AttacksDES=Sie haben eine unsichere Cipher Suite ausgewählt! \nDer aktuelle Rekord beim Brechen (Brute-Force) von DES liegt bei unter einem Tag.
AttacksNoCipher=Sie haben eine unsichere Cipher Suite ausgewählt! \nSie haben keine Verschlüsselung ausgewählt, ihre Nachrichten werden im Klartext versendet!
AttacksLucky13=Sie haben eine unsichere Cipher Suite ausgewählt! \nTLS 1.0 bzw. TLS1.1 in Kombination mit CBC ermöglicht die sogenannte Lucky13 Attacke. Lucky13 ist eine Variante der Padding Oracle Attacke.
AttacksRSA=Sie haben eine unsichere Cipher Suite ausgewählt! \nSie haben RSA zur Schlüsselgenerierung gewählt somit ist keine Perfect Forward Secrecy gegeben, um diese zu erreichen muss das Diffie-Hellman Verfahren verwendet werden.

TLS0_DHE_DSS_WITH_3DES_EDE_CBC_SHA=TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA
TLS0_DHE_DSS_WITH_DES_CBC_SHA=TLS_DHE_DSS_WITH_DES_CBC_SHA
TLS0_DHE_RSA_WITH_3DES_EDE_CBC_SHA=TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA
TLS0_DHE_RSA_WITH_DES_CBC_SHA=TLS_DHE_RSA_WITH_DES_CBC_SHA
TLS0_DH_DSS_WITH_3DES_EDE_CBC_SHA=TLS_DH_DSS_WITH_3DES_EDE_CBC_SHA
TLS0_DH_DSS_WITH_DES_CBC_SHA=TLS_DH_DSS_WITH_DES_CBC_SHA
TLS0_DH_RSA_WITH_3DES_EDE_CBC_SHA=TLS_DH_RSA_WITH_3DES_EDE_CBC_SHA
TLS0_DH_RSA_WITH_DES_CBC_SHA=TLS_DH_RSA_WITH_DES_CBC_SHA
TLS0_RSA_WITH_3DES_EDE_CBC_SHA=TLS_RSA_WITH_3DES_EDE_CBC_SHA
TLS0_RSA_WITH_DES_CBC_SHA=TLS_RSA_WITH_DES_CBC_SHA
TLS0_RSA_WITH_NULL_MD5=TLS_RSA_WITH_NULL_MD5
TLS0_RSA_WITH_NULL_SHA=TLS_RSA_WITH_NULL_SHA
TLS0_RSA_WITH_RC4_128_MD5=TLS_RSA_WITH_RC4_128_MD5
TLS0_RSA_WITH_RC4_128_SHA=TLS_RSA_WITH_RC4_128_SHA
TLS1_DHE_DSS_WITH_AES_128_CBC_SHA=TLS_DHE_DSS_WITH_AES_128_CBC_SHA
TLS1_DHE_DSS_WITH_AES_256_CBC_SHA=TLS_DHE_DSS_WITH_AES_256_CBC_SHA
TLS1_DHE_RSA_WITH_AES_128_CBC_SHA=TLS_DHE_RSA_WITH_AES_128_CBC_SHA
TLS1_DHE_RSA_WITH_AES_256_CBC_SHA=TLS_DHE_RSA_WITH_AES_256_CBC_SHA
TLS1_DH_DSS_WITH_AES_128_CBC_SHA=TLS_DH_DSS_WITH_AES_128_CBC_SHA
TLS1_DH_DSS_WITH_AES_256_CBC_SHA=TLS_DH_DSS_WITH_AES_256_CBC_SHA
TLS1_DH_RSA_WITH_AES_128_CBC_SHA=TLS_DH_RSA_WITH_AES_128_CBC_SHA
TLS1_DH_RSA_WITH_AES_256_CBC_SHA=TLS_DH_RSA_WITH_AES_256_CBC_SHA
TLS1_RSA_WITH_AES_128_CBC_SHA=TLS_RSA_WITH_AES_128_CBC_SHA 
TLS1_RSA_WITH_AES_256_CBC_SHA=TLS_RSA_WITH_AES_256_CBC_SHA 
TLS2_DHE_DSS_WITH_3DES_EDE_CBC_SHA=TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA
TLS2_DHE_DSS_WITH_AES_128_CBC_SHA=TLS_DHE_DSS_WITH_AES_128_CBC_SHA
TLS2_DHE_DSS_WITH_AES_128_CBC_SHA256=TLS_DHE_DSS_WITH_AES_128_CBC_SHA256
TLS2_DHE_DSS_WITH_AES_256_CBC_SHA=TLS_DHE_DSS_WITH_AES_256_CBC_SHA
TLS2_DHE_DSS_WITH_AES_256_CBC_SHA256=TLS_DHE_DSS_WITH_AES_256_CBC_SHA256
TLS2_DHE_RSA_WITH_3DES_EDE_CBC_SHA=TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA
TLS2_DHE_RSA_WITH_AES_128_CBC_SHA=TLS_DHE_RSA_WITH_AES_128_CBC_SHA
TLS2_DHE_RSA_WITH_AES_128_CBC_SHA256=TLS_DHE_RSA_WITH_AES_128_CBC_SHA256
TLS2_DHE_RSA_WITH_AES_256_CBC_SHA=TLS_DHE_RSA_WITH_AES_256_CBC_SHA
TLS2_DHE_RSA_WITH_AES_256_CBC_SHA256=TLS_DHE_RSA_WITH_AES_256_CBC_SHA256
TLS2_DH_DSS_WITH_3DES_EDE_CBC_SHA=TLS_DH_DSS_WITH_3DES_EDE_CBC_SHA
TLS2_DH_DSS_WITH_AES_128_CBC_SHA=TLS_DH_DSS_WITH_AES_128_CBC_SHA
TLS2_DH_DSS_WITH_AES_128_CBC_SHA256=TLS_DH_DSS_WITH_AES_128_CBC_SHA256
TLS2_DH_DSS_WITH_AES_256_CBC_SHA=TLS_DH_DSS_WITH_AES_256_CBC_SHA
TLS2_DH_DSS_WITH_AES_256_CBC_SHA256=TLS_DH_DSS_WITH_AES_256_CBC_SHA256
TLS2_DH_RSA_WITH_3DES_EDE_CBC_SHA=TLS_DH_RSA_WITH_3DES_EDE_CBC_SHA
TLS2_DH_RSA_WITH_AES_128_CBC_SHA=TLS_DH_RSA_WITH_AES_128_CBC_SHA
TLS2_DH_RSA_WITH_AES_128_CBC_SHA256=TLS_DH_RSA_WITH_AES_128_CBC_SHA256 
TLS2_DH_RSA_WITH_AES_256_CBC_SHA=TLS_DH_RSA_WITH_AES_256_CBC_SHA
TLS2_DH_RSA_WITH_AES_256_CBC_SHA256=TLS_DH_RSA_WITH_AES_256_CBC_SHA256
TLS2_RSA_WITH_3DES_EDE_CBC_SHA=TLS_RSA_WITH_3DES_EDE_CBC_SHA
TLS2_RSA_WITH_AES_128_CBC_SHA=TLS_RSA_WITH_AES_128_CBC_SHA
TLS2_RSA_WITH_AES_128_CBC_SHA256=TLS_RSA_WITH_AES_128_CBC_SHA256
TLS2_RSA_WITH_AES_256_CBC_SHA=TLS_RSA_WITH_AES_256_CBC_SHA 
TLS2_RSA_WITH_AES_256_CBC_SHA256=TLS_RSA_WITH_AES_256_CBC_SHA256
TLS2_RSA_WITH_NULL_MD5=TLS_RSA_WITH_NULL_MD5
TLS2_RSA_WITH_NULL_SHA=TLS_RSA_WITH_NULL_SHA
TLS2_RSA_WITH_NULL_SHA256=TLS_RSA_WITH_NULL_SHA256 
TLS2_RSA_WITH_RC4_128_MD5=TLS_RSA_WITH_RC4_128_MD5
TLS2_RSA_WITH_RC4_128_SHA=TLS_RSA_WITH_RC4_128_SHA
TLS2_RSA_WITH_AES_128_GCM_SHA256=TLS_RSA_WITH_AES_128_GCM_SHA256
TLS2_RSA_WITH_AES_256_GCM_SHA384=TLS_RSA_WITH_AES_256_GCM_SHA384
TLS2_DHE_RSA_WITH_AES_128_GCM_SHA256=TLS_DHE_RSA_WITH_AES_128_GCM_SHA256
TLS2_DHE_RSA_WITH_AES_256_GCM_SHA384=TLS_DHE_RSA_WITH_AES_256_GCM_SHA384
TLS2_DH_RSA_WITH_AES_128_GCM_SHA256=TLS_DH_RSA_WITH_AES_128_GCM_SHA256
TLS2_DH_RSA_WITH_AES_256_GCM_SHA384=TLS_DH_RSA_WITH_AES_256_GCM_SHA384
TLS2_DHE_DSS_WITH_AES_128_GCM_SHA256=TLS_DHE_DSS_WITH_AES_128_GCM_SHA256
TLS2_DHE_DSS_WITH_AES_256_GCM_SHA384=TLS_DHE_DSS_WITH_AES_256_GCM_SHA384
TLS2_DH_DSS_WITH_AES_128_GCM_SHA256=TLS_DH_DSS_WITH_AES_128_GCM_SHA256
TLS2_DH_DSS_WITH_AES_256_GCM_SHA384=TLS_DH_DSS_WITH_AES_256_GCM_SHA384
Tls1.0=TLS 1.0
Tls1.1=TLS 1.1
Tls1.2=TLS 1.2
