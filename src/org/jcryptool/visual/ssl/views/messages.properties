#Eclipse modern messages class
#Fri Dec 27 13:21:10 CET 2013
AttacksBEAST=You have chosen an insecure cipher suite! \nTLS1.0 in combination with CBC allows the so called BEAST attack.
AttacksCaution=Caution!
AttacksDES=You have chosen an insecure cipher suite! \nThe current record for breaking DES (by brute-force) is less than a day.
AttacksLucky13=You have chosen an insecure cipher suite! \nTLS 1.0 or TLS1.1 in combination with CBC allows the so called Lucky13 attack. Lucky13 is a variant of the Padding Oracle Attack.
AttacksMD5=You have chosen an insecure cipher suite! \n Hashes created with MD5 can be broken in a very short period of time!
AttacksNoCipher=You have chosen an insecure cipher suite! \nYou have chosen no encryption at all. Your messages will be sent as plaintext!
AttacksProceed=\nContinue anyways?
AttacksRC4=You have chosen an insecure cipher suite! \nThere are a number of attacks on RC4. The newest and most critical is the attack from AlFardan, Bernstein, Paterson, Poettering und Schuldt.
AttacksRSA=You have chosen an insecure cipher suite! \nYou have chosen RSA to create the encryption keys. RSA provides no Perfect Forward Secrecy, to achieve this, you need to use a Diffie-Hellman algorithm.
AttacksSHA1=You have chosen an insecure cipher suite! \nSHA1 is not a secure hash algorithm. There are already a number of attacks known.
CertificateShowExit=Close
CertificateShow_btnISee_text=I see
CertificateShow_grpCertificate_text=Certificate
ClientCertificateCompositeBtnInfo=Information
ClientCertificateCompositeBtnNextStep=Next Step
ClientCertificateCompositeBtnShow=Show
ClientCertificateCompositeGrpClientCertificate=Client Certificate
ClientCertificateCompositeLblCertifcate=Client Certificate Request
ClientCertificateCompositeLblCertificateVerify=Certificate Verify
ClientCertificateCompositeLblClientKeyExchange=Client Key Exchange
ClientCertificateInformationText=Client Certificate\:\n\nIn diesem Schritt wird, sofern angefordert, das Zertifikat des Client erzeugt sowie Schl\u00FCsselinformationen ausgetauscht.\n\nSofern im Schritt zuvor (Server Certificate) das Feld Server Certificate Request mit \u201EJa\u201C markiert wurde, kann man sich \u00FCber den \u201EAnzeigen\u201C-Button das Zertifikat des Client anzeigen lassen.\n\nDer Parameter Client_Key_Exchange verdeutlicht, dass Schl\u00FCsselmaterial ausgetauscht wird.\n\nIm Certificate_Verify versucht der Client das Zertifikat des Servers zu verifizieren. Wenn dies nicht m\u00F6glich ist, wird die Verbindung abgebrochen.
ClientChangeCipherSpecCompositeBtnInformation=Information
ClientChangeCipherSpecCompositeBtnNextStep=Next Step
ClientChangeCipherSpecCompositeLblClientChangeCipher=Client Change Cipher Spec
ClientChangeCipherSpecCompositeLblClientChangeCipherSpec=Change Cipher Spec
ClientChangeCipherSpecCompositeLblFinished=Finished
ClientChangeCipherSpecInformationText=Client Change Cipher Spec\:\n\nVia Change_Cipher_Spec signalisiert der Server, dass er ab jetzt die neuen, zuvor festgelegten Schl\u00FCssel verwendet.
ClientFinishedCompositeBtnInformation=Information
ClientFinishedCompositeGrpServerFinished=Client Finished
ClientFinishedCompositeLblFinished=Finished
ClientFinishedInformationText=Client Finished\:\n\nClient_Finished ist eine Nachricht, bestehend aus einem Hashwert \u00FCber alle vorhergehenden Nachrichten und erzeugten Schl\u00FCssel. Dies dient zum Vergleichen der berechneten Schl\u00FCssel.\n\nDiese Nachricht ist die erste Nachricht die mit den zuvor festgelegten Parametern verschl\u00FCsselt wird.
ClientHelloCompositeBtnGenerate=generate
ClientHelloCompositeBtnInformation=Information
ClientHelloCompositeBtnNextStep=Next Step
ClientHelloCompositeGrpClientHello=Client Hello
ClientHelloCompositeLblCipherSuit=Cipher Suite
ClientHelloCompositeLblRandom=Random
ClientHelloCompositeLblSessionId=Session ID
ClientHelloCompositeLblSessionIdValue=0
ClientHelloCompositeLblVersion=Version
ClientHelloComposite_btnCheckButton_text=Check Button
ClientHelloComposite_group_text=Client Hello
ClientHelloInformationText=Client Hello\:\n\nIn diesem Schritt geht es darum, dass der Client auf sich aufmerksam macht und die ersten Verbindungsparameter \u00FCbermittelt.\n\nDabei w\u00E4hlt der Client die von ihm unterst\u00FCtzten SSL/TLS- Versionen sowie Cipher Suits aus, welche er f\u00FCr diese Kommunikation verwenden m\u00F6chte. Hierbei sind auch Mehrfachauswahlen m\u00F6glich. Des Weiteren wird mit diesen Parametern der Handshake durchgef\u00FChrt. Falls der Server keine der vorgeschlagenen Optionen unterst\u00FCtzt, weist er das Query zur\u00FCck und der Client muss erneut Vorschl\u00E4ge senden.\n\nDer Zufallswert besteht aus 4 Byte Zeitstempel + 28 Byte Zufallszahl. Dies dient dem Replayschutz.\n\nDie Session ID ist bei jedem Verbindungsaufbau \u201E0\u201C und signalisiert damit, dass eine neue Verbindung aufgebaut werden soll. W\u00E4re der Wert ungleich \u201E0\u201C, so w\u00FCrden die Parameter einer bestehenden Verbindung verwendet und die Schritte 2 und 3 \u00FCbersprungen werden, dies darzustellen war jedoch nicht unser Ziel.
ServerCertificateCompositeBtnInfo=Information
ServerCertificateCompositeBtnNextStep=Next Step
ServerCertificateCompositeBtnShow=Show
ServerCertificateCompositeLblCertificate=Servers Certificate
ServerCertificateCompositeLblCertificateRequest=Server Certificate Request
ServerCertificateCompositeLblServerHelloDone=Server Hello Done
ServerCertificateCompositeLblServerKeyExchange=Server Key Exchange
ServerCertificateCompositeRdbNo=No
ServerCertificateCompositeRdbYes=Yes
ServerCertificateCompositeServerCertificate=Server Certificate
ServerCertificateInformationText=Server Certificate\:\n\nIn diesem Schritt dreht sich alles um den Austausch von Zertifikaten, sowie die Schl\u00FCsselberechnung durch die zuvor festgelegten Parameter.\n\nDurch den \u201EAnzeigen\u201C Button kann man sich das Zertifikat des Servers anzeigen lassen.\n\nDurch die Auswahlm\u00F6glichkeiten bei Server Certificate Request legt man fest, ob ein Zertifikat des Client angefordert wird. Ist dies nicht der Fall, ist es auch nicht m\u00F6glich sich im n\u00E4chsten Schritt das Zertifikat des Client anzeigen zu lassen.\n\nDer Parameter Server_Key_Exchange teilt dem Client mit, dass zus\u00E4tzliche Schl\u00FCsselinformationen ben\u00F6tigt werden (bei Diffie-Hellman n\u00F6tig).\n\nMit Server_Hello_Done wird der 2. Schritt beendet.
ServerChangeCipherSpecCompositeBtnInformation=Information
ServerChangeCipherSpecCompositeBtnNextStep=Next Step
ServerChangeCipherSpecCompositeLblFinished=Finished
ServerChangeCipherSpecCompositeLblServerChangeCipher=Server Change Cipher Spec
ServerChangeCipherSpecCompositeLblServerChangeCipherSpec=Change Cipher Spec
ServerChangeCipherSpecInformationText=Server Change Cipher Spec\:\n\nVia Change_Cipher_Spec signalisiert der Server, dass er ab jetzt die neuen, zuvor festgelegten Schl\u00FCssel verwendet.
ServerFinishedCompositeBtnInformation=Information
ServerFinishedCompositeGrpServerFinished=Server Finished
ServerFinishedCompositeLblFinished=Finished
ServerFinishedInformationText=Server Finished\:\n\nServer_Finished ist eine Nachricht, bestehend aus einem Hashwert \u00FCber alle vorhergehenden Nachrichten und erzeugten Schl\u00FCssel. Dies dient zum Vergleichen der berechneten Schl\u00FCssel.\n\nDiese Nachricht ist die erste Nachricht die mit den zuvor festgelegten Parametern verschl\u00FCsselt wird.
ServerHelloCompositeBtnGenerate=generate
ServerHelloCompositeBtnInfo=Information
ServerHelloCompositeBtnNextStep=Next Step
ServerHelloCompositeError=Error
ServerHelloCompositeErrorRandom=Non-hex text in textfield Random
ServerHelloCompositeErrorRandomShort=Hex text in textfield Random must be 64 digits long
ServerHelloCompositeErrorSessionID=Non-numeric text in textfield Session ID
ServerHelloCompositeGrpServerHello=Server Hello
ServerHelloCompositeLblCipherSuite=Cipher Suite
ServerHelloCompositeLblRandom=Random
ServerHelloCompositeLblSessionID=Session ID
ServerHelloCompositeLblVersion=Version
ServerHelloInformationText=Server Hello\:\n\nIn diesem Schritt w\u00E4hlt der Server eine SSL/TLS- Version sowie eine Cipher Suite aus. Sollte diese SSL/TLS-Version bzw. Cipher Suite vom Client nicht unterst\u00FCtzt werden, sendet der Server eine Nachricht an den Client, dass mit diesen Einstellungen kein Verbindungsaufbau m\u00F6glich ist und der Client erneut eine Liste mit unterst\u00FCtzten SSL/TLS-Versionen und Cipher Suites senden muss.\n\nAuch der Server erzeugt sich einen eigenen Zufallswert. Dieser hat denselben Aufbau wie der des Clients, d.h. er besteht aus 4 Byte Zeitstempel + 28 Byte Zufallszahl.\n\nZuletzt wird die \u00FCbermittelte Session ID noch auf einen Wert ungleich \u201E0\u201C gesetzt, um sp\u00E4ter die durchgef\u00FChrten Handshakes den einzelnen Clients zuordnen zu k\u00F6nnen.
SslViewBtnNextStep=Next Step
SslViewBtnPreviousStep=Previous Step
SslViewBtnReset=Reset
SslViewLblClient=Client
SslViewLblInfo=Information
SslViewLblServer=Server
SslViewStxInformation=Information
TLS0_DHE_DSS_WITH_3DES_EDE_CBC_SHA=TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA
TLS0_DHE_DSS_WITH_DES_CBC_SHA=TLS_DHE_DSS_WITH_DES_CBC_SHA
TLS0_DHE_RSA_WITH_3DES_EDE_CBC_SHA=TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA
TLS0_DHE_RSA_WITH_DES_CBC_SHA=TLS_DHE_RSA_WITH_DES_CBC_SHA
TLS0_DH_DSS_WITH_3DES_EDE_CBC_SHA=TLS_DH_DSS_WITH_3DES_EDE_CBC_SHA
TLS0_DH_DSS_WITH_DES_CBC_SHA=TLS_DH_DSS_WITH_DES_CBC_SHA
TLS0_DH_RSA_WITH_3DES_EDE_CBC_SHA=TLS_DH_RSA_WITH_3DES_EDE_CBC_SHA
TLS0_DH_RSA_WITH_DES_CBC_SHA=TLS_DH_RSA_WITH_DES_CBC_SHA
TLS0_RSA_WITH_3DES_EDE_CBC_SHA=TLS_RSA_WITH_3DES_EDE_CBC_SHA
TLS0_RSA_WITH_DES_CBC_SHA=TLS_RSA_WITH_DES_CBC_SHA
TLS0_RSA_WITH_NULL_MD5=TLS_RSA_WITH_NULL_MD5
TLS0_RSA_WITH_NULL_SHA=TLS_RSA_WITH_NULL_SHA
TLS0_RSA_WITH_RC4_128_MD5=TLS_RSA_WITH_RC4_128_MD5
TLS0_RSA_WITH_RC4_128_SHA=TLS_RSA_WITH_RC4_128_SHA
TLS1_DHE_DSS_WITH_AES_128_CBC_SHA=TLS_DHE_DSS_WITH_AES_128_CBC_SHA
TLS1_DHE_DSS_WITH_AES_256_CBC_SHA=TLS_DHE_DSS_WITH_AES_256_CBC_SHA
TLS1_DHE_RSA_WITH_AES_128_CBC_SHA=TLS_DHE_RSA_WITH_AES_128_CBC_SHA
TLS1_DHE_RSA_WITH_AES_256_CBC_SHA=TLS_DHE_RSA_WITH_AES_256_CBC_SHA
TLS1_DH_DSS_WITH_AES_128_CBC_SHA=TLS_DH_DSS_WITH_AES_128_CBC_SHA
TLS1_DH_DSS_WITH_AES_256_CBC_SHA=TLS_DH_DSS_WITH_AES_256_CBC_SHA
TLS1_DH_RSA_WITH_AES_128_CBC_SHA=TLS_DH_RSA_WITH_AES_128_CBC_SHA
TLS1_DH_RSA_WITH_AES_256_CBC_SHA=TLS_DH_RSA_WITH_AES_256_CBC_SHA
TLS1_RSA_WITH_AES_128_CBC_SHA=TLS_RSA_WITH_AES_128_CBC_SHA 
TLS1_RSA_WITH_AES_256_CBC_SHA=TLS_RSA_WITH_AES_256_CBC_SHA 
TLS2_DHE_DSS_WITH_3DES_EDE_CBC_SHA=TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA
TLS2_DHE_DSS_WITH_AES_128_CBC_SHA=TLS_DHE_DSS_WITH_AES_128_CBC_SHA
TLS2_DHE_DSS_WITH_AES_128_CBC_SHA256=TLS_DHE_DSS_WITH_AES_128_CBC_SHA256
TLS2_DHE_DSS_WITH_AES_128_GCM_SHA256=TLS_DHE_DSS_WITH_AES_128_GCM_SHA256
TLS2_DHE_DSS_WITH_AES_256_CBC_SHA=TLS_DHE_DSS_WITH_AES_256_CBC_SHA
TLS2_DHE_DSS_WITH_AES_256_CBC_SHA256=TLS_DHE_DSS_WITH_AES_256_CBC_SHA256
TLS2_DHE_DSS_WITH_AES_256_GCM_SHA384=TLS_DHE_DSS_WITH_AES_256_GCM_SHA384
TLS2_DHE_RSA_WITH_3DES_EDE_CBC_SHA=TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA
TLS2_DHE_RSA_WITH_AES_128_CBC_SHA=TLS_DHE_RSA_WITH_AES_128_CBC_SHA
TLS2_DHE_RSA_WITH_AES_128_CBC_SHA256=TLS_DHE_RSA_WITH_AES_128_CBC_SHA256
TLS2_DHE_RSA_WITH_AES_128_GCM_SHA256=TLS_DHE_RSA_WITH_AES_128_GCM_SHA256
TLS2_DHE_RSA_WITH_AES_256_CBC_SHA=TLS_DHE_RSA_WITH_AES_256_CBC_SHA
TLS2_DHE_RSA_WITH_AES_256_CBC_SHA256=TLS_DHE_RSA_WITH_AES_256_CBC_SHA256
TLS2_DHE_RSA_WITH_AES_256_GCM_SHA384=TLS_DHE_RSA_WITH_AES_256_GCM_SHA384
TLS2_DH_DSS_WITH_3DES_EDE_CBC_SHA=TLS_DH_DSS_WITH_3DES_EDE_CBC_SHA
TLS2_DH_DSS_WITH_AES_128_CBC_SHA=TLS_DH_DSS_WITH_AES_128_CBC_SHA
TLS2_DH_DSS_WITH_AES_128_CBC_SHA256=TLS_DH_DSS_WITH_AES_128_CBC_SHA256
TLS2_DH_DSS_WITH_AES_128_GCM_SHA256=TLS_DH_DSS_WITH_AES_128_GCM_SHA256
TLS2_DH_DSS_WITH_AES_256_CBC_SHA=TLS_DH_DSS_WITH_AES_256_CBC_SHA
TLS2_DH_DSS_WITH_AES_256_CBC_SHA256=TLS_DH_DSS_WITH_AES_256_CBC_SHA256
TLS2_DH_DSS_WITH_AES_256_GCM_SHA384=TLS_DH_DSS_WITH_AES_256_GCM_SHA384
TLS2_DH_RSA_WITH_3DES_EDE_CBC_SHA=TLS_DH_RSA_WITH_3DES_EDE_CBC_SHA
TLS2_DH_RSA_WITH_AES_128_CBC_SHA=TLS_DH_RSA_WITH_AES_128_CBC_SHA
TLS2_DH_RSA_WITH_AES_128_CBC_SHA256=TLS_DH_RSA_WITH_AES_128_CBC_SHA256 
TLS2_DH_RSA_WITH_AES_128_GCM_SHA256=TLS_DH_RSA_WITH_AES_128_GCM_SHA256
TLS2_DH_RSA_WITH_AES_256_CBC_SHA=TLS_DH_RSA_WITH_AES_256_CBC_SHA
TLS2_DH_RSA_WITH_AES_256_CBC_SHA256=TLS_DH_RSA_WITH_AES_256_CBC_SHA256
TLS2_DH_RSA_WITH_AES_256_GCM_SHA384=TLS_DH_RSA_WITH_AES_256_GCM_SHA384
TLS2_RSA_WITH_3DES_EDE_CBC_SHA=TLS_RSA_WITH_3DES_EDE_CBC_SHA
TLS2_RSA_WITH_AES_128_CBC_SHA=TLS_RSA_WITH_AES_128_CBC_SHA
TLS2_RSA_WITH_AES_128_CBC_SHA256=TLS_RSA_WITH_AES_128_CBC_SHA256
TLS2_RSA_WITH_AES_128_GCM_SHA256=TLS_RSA_WITH_AES_128_GCM_SHA256
TLS2_RSA_WITH_AES_256_CBC_SHA=TLS_RSA_WITH_AES_256_CBC_SHA 
TLS2_RSA_WITH_AES_256_CBC_SHA256=TLS_RSA_WITH_AES_256_CBC_SHA256
TLS2_RSA_WITH_AES_256_GCM_SHA384=TLS_RSA_WITH_AES_256_GCM_SHA384
TLS2_RSA_WITH_NULL_MD5=TLS_RSA_WITH_NULL_MD5
TLS2_RSA_WITH_NULL_SHA=TLS_RSA_WITH_NULL_SHA
TLS2_RSA_WITH_NULL_SHA256=TLS_RSA_WITH_NULL_SHA256 
TLS2_RSA_WITH_RC4_128_MD5=TLS_RSA_WITH_RC4_128_MD5
TLS2_RSA_WITH_RC4_128_SHA=TLS_RSA_WITH_RC4_128_SHA
Tls1.0=TLS 1.0
Tls1.1=TLS 1.1
Tls1.2=TLS 1.2
stxInformationCipherSuiteRefused1=Server sends a message to the client, that the server wants to use a cipher suite (
stxInformationCipherSuiteRefused2=), that is not supported by the client, according to the first message the client sent. To ensure that a connection is possible, the client has to support the cipher suite, the server wants to use.
stxInformationCipherSuitesExchanged=Selected Cipher Suites, VersionID, Session ID and Random Value were sent to the server.\n\n
stxInformationRandomValue=Random Value\:\n
stxInformationSelectedCiphers=Selected Cipher Suites\n\nTLS1.0\:\n
stxInformationTLS1=\nTLS 1.1\:\n
stxInformationTLS2=\nTLS 1.2\:\n
